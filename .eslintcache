[{"F:\\snapchatclone\\src\\index.js":"1","F:\\snapchatclone\\src\\App.js":"2","F:\\snapchatclone\\src\\serviceWorker.js":"3","F:\\snapchatclone\\src\\app\\store.js":"4","F:\\snapchatclone\\src\\features\\appSlice.js":"5","F:\\snapchatclone\\src\\WebCapture.js":"6","F:\\snapchatclone\\src\\features\\imageSlice.js":"7","F:\\snapchatclone\\src\\SnapList.js":"8","F:\\snapchatclone\\src\\PreviewScreen.js":"9","F:\\snapchatclone\\src\\firebase.js":"10","F:\\snapchatclone\\src\\SnapRow.js":"11","F:\\snapchatclone\\src\\Chat.js":"12","F:\\snapchatclone\\src\\Login.js":"13"},{"size":644,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":1619,"mtime":1611643644462,"results":"16","hashOfConfig":"15"},{"size":5141,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":258,"mtime":1611476192292,"results":"18","hashOfConfig":"15"},{"size":723,"mtime":1611640002955,"results":"19","hashOfConfig":"15"},{"size":1185,"mtime":1611482677571,"results":"20","hashOfConfig":"15"},{"size":486,"mtime":1611634395223,"results":"21","hashOfConfig":"15"},{"size":2099,"mtime":1611659823155,"results":"22","hashOfConfig":"15"},{"size":2633,"mtime":1611653819870,"results":"23","hashOfConfig":"15"},{"size":630,"mtime":1611560123675,"results":"24","hashOfConfig":"15"},{"size":1291,"mtime":1611659213688,"results":"25","hashOfConfig":"15"},{"size":1359,"mtime":1611659846803,"results":"26","hashOfConfig":"15"},{"size":836,"mtime":1611659836202,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1odaxyj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\snapchatclone\\src\\index.js",[],["57","58"],"F:\\snapchatclone\\src\\App.js",["59"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Chat from \"./Chat\";\r\nimport { login, logout, selectUser } from \"./features/appSlice\";\r\nimport { auth } from \"./firebase\";\r\nimport Login from \"./Login\";\r\nimport PreviewScreen from \"./PreviewScreen\";\r\nimport SnapList from \"./SnapList\";\r\nimport WebCapture from \"./WebCapture\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        dispatch(\r\n          login({\r\n            userName: authUser.displayName,\r\n            email: authUser.email,\r\n            photo: authUser.photoURL,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    });\r\n  });\r\n  return (\r\n    <div className=\"App\">\r\n      <img\r\n        className=\"snapchatLogo\"\r\n        src=\"https://www.adlibweb.com/wp-content/uploads/2019/01/1472577598_119719_1472577690_noticia_normal.jpg\"\r\n        alt=\"image\"\r\n      />\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/chatview\">\r\n            <Chat />\r\n          </Route>\r\n          <Route exact path=\"/snaplist\">\r\n            <SnapList />\r\n          </Route>\r\n          <Route path=\"/preview\">\r\n            <PreviewScreen />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            {!user ? <Login /> : <WebCapture />}\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\snapchatclone\\src\\serviceWorker.js",[],"F:\\snapchatclone\\src\\app\\store.js",[],"F:\\snapchatclone\\src\\features\\appSlice.js",[],"F:\\snapchatclone\\src\\WebCapture.js",[],"F:\\snapchatclone\\src\\features\\imageSlice.js",[],"F:\\snapchatclone\\src\\SnapList.js",[],"F:\\snapchatclone\\src\\PreviewScreen.js",["60"],"import {\r\n  AccessAlarm,\r\n  AttachFile,\r\n  CloseRounded,\r\n  CreateOutlined,\r\n  InsertDriveFile,\r\n  MusicNote,\r\n  Title,\r\n} from \"@material-ui/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { resetImage, selectimage } from \"./features/imageSlice\";\r\nimport \"./PreviewScreen.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { db, storage } from \"./firebase\";\r\nfunction PreviewScreen() {\r\n  const [progress, setprogress] = useState(0);\r\n  const image = useSelector(selectimage);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!image) {\r\n      history.replace(\"/\");\r\n    }\r\n  });\r\n  const clear = () => {\r\n    dispatch(resetImage());\r\n  };\r\n  const sendPic = () => {\r\n    const id = uuidv4();\r\n    const uploadTask = storage.ref(`photo/${id}`).putString(image, \"data_url\");\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        var progress = Math.floor(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setprogress(progress);\r\n        switch (snapshot.state) {\r\n          case firebase.storage.TaskState.PAUSED:\r\n            break;\r\n          case firebase.storage.TaskState.RUNNING:\r\n            break;\r\n          default:\r\n            console.log(\"..\");\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"photo\")\r\n          .child(id)\r\n          .getDownloadURL()\r\n          .then((downloadURL) => {\r\n            db.collection(\"snapChat\").add({\r\n              imageUrl: downloadURL,\r\n              Name: \"Danish Pandita\",\r\n              read: false,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n            history.replace(\"/snapList\");\r\n          });\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"Previewscreen\">\r\n      <img className=\"imagePreview\" src={image} alt=\"\" />\r\n      <CloseRounded className=\"resetImage\" onClick={clear} />\r\n      <div className=\"RightTopIcons\">\r\n        <Title className=\"RightTopIcon\" />\r\n        <CreateOutlined className=\"RightTopIcon\" />\r\n        <InsertDriveFile className=\"RightTopIcon\" />\r\n        <MusicNote className=\"RightTopIcon\" />\r\n        <AttachFile className=\"RightTopIcon\" />\r\n        <AccessAlarm className=\"RightTopIcon\" />\r\n      </div>\r\n      <button onClick={sendPic} className=\"sendPic\">\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreviewScreen;\r\n","F:\\snapchatclone\\src\\firebase.js",[],"F:\\snapchatclone\\src\\SnapRow.js",[],"F:\\snapchatclone\\src\\Chat.js",[],"F:\\snapchatclone\\src\\Login.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":33,"column":7,"nodeType":"67","endLine":37,"endColumn":9},{"ruleId":"68","severity":1,"message":"69","line":19,"column":10,"nodeType":"70","messageId":"71","endLine":19,"endColumn":18},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'progress' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]